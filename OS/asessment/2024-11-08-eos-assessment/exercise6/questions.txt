

Question 1
==========
Consider a CPU with a 3 stages pipeline each executing an operation in t seconds. How do you compute the toal execution time of a sequence of 100 operation in the hypotesis that the pipeline never stalls?
<Write here your answer>
I will compute the filling time for the first task to fill the pipeline, since the pipeeline is 3 stages it fillTime= 3t, then since 99 task are remaining and the pipeline never stalls i will be completing a task every clock cicle so execTime = 99t. The total execution time is = 99t + 3t = 103t 

Question 2
==========
In a microkernel can you explain how a system call that requires the use of the file system is implemented? The filesystem is executed in user space.

<Write here your answer>
Usually the kernel will allocate a space of memory and use a pointer to that space to allow the system call to write in it, and some information on the specific file or resurce in need, then there will be a contex switch to the user space for handling the request. The user space now will copy the requested information, after checking permissions but since the kernel is the initiator it should not rise any permission errors, then once finisched another contex switch will be made to return to the kernel space. 

Question 3
==========
Which are the main differences between a microprocessor and a microcontroller?

<Write here your answer>
A microprocessor is a CPU that needs external components such as memory and peripherals in order to work, but offers more performance due tu the higher clocks that can reach but consuming more power. A microcontroller is a package conatining a CPU memory and I/O, it reaches lower frequencies consuming less power, making it suitable for embedded systems, it requires usally an external programmer to load a bootloader or programs in memory. 

Question 4
==========
<Place an [X] for the correct answer>

What is the main distinction between hard and soft real-time systems?

[x] Hard real-time systems guarantee the timeliness of tasks, while soft real-time systems allow occasional missed deadlines.
[ ] Hard real-time systems prioritize task order over timing, while soft real-time systems prioritize timing.
[ ] Hard real-time systems require high performance, while soft real-time systems do not.
[ ] Hard real-time systems operate with real hardware, while soft real-time systems operate in a simulated environment.


Question 5
==========
<Place an [X] for the correct answer>


Which of the following statements about race conditions is true?
[ ] Race conditions always lead to system crashes.
[ ] Race conditions only occur in single-threaded applications.
[x] Race conditions are difficult to reproduce because the timing of thread execution can vary.
[ ] Race conditions are only a concern in real-time systems.
